<UserControl x:Class="OS_Project.Views.TreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OS_Project"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="800"
             
            Loaded="TreeView_Loaded"             
>
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#D7E5FA"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#D7E5FA"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="hover_driver_btn" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="8" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomListBoxItem" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">

                        <Button Style="{DynamicResource hover_driver_btn}" HorizontalAlignment="Center" Background="Transparent">

                            <Grid Margin="12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0">
                                    <Image Source="/Views/usb.png" Margin="8" Width="76" Height="76"/>
                                </StackPanel>
                                <StackPanel Grid.Column="1" Margin="0 16 0 0">
                                    <TextBlock Text="name" FontSize="20" FontWeight="Bold" FontFamily="poppins"/>
                                    <TextBlock Text="type" FontSize="18" FontFamily="poppins"/>
                                </StackPanel>

                            </Grid>


                        </Button>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </UserControl.Resources>

    <Grid Background="White" HorizontalAlignment="Left">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"></ColumnDefinition>
            <ColumnDefinition Width="550"></ColumnDefinition>
            <ColumnDefinition Width="300"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <StackPanel x:Name="DriverContainer" Grid.Column="0">
            <Border BorderThickness="0,0,0,2" BorderBrush="#D7E5FA">
                <StackPanel>
                    <TextBlock Margin="8" FontSize="16" FontFamily="poppins">Drivers</TextBlock>
                </StackPanel>
            </Border>
            <ListBox x:Name="DriversList" ItemsSource="{Binding Drivers}" Margin="12" BorderBrush="Transparent">
                <ListBox.Resources>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Button Tag="{Binding}" Width="260" Style="{DynamicResource hover_driver_btn}" HorizontalAlignment="Center" Background="Transparent" Click="DriveBtn_Click">
                                        <Grid Width="240"  Margin="0" HorizontalAlignment="Right" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="78"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Grid.Column="0">
                                                <Image Source="/Views/usb.png" Width="64" Height="76"/>
                                            </StackPanel>
                                            <StackPanel Grid.Column="1" Margin="0 12 0 0">
                                                <TextBlock x:Name="driveName" Text="{Binding fullname}" FontSize="18" FontWeight="Bold" FontFamily="poppins"/>
                                                <TextBlock Text="{Binding type}" FontSize="16" FontFamily="poppins"/>
                                            </StackPanel>
                                        </Grid>
                                    </Button>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.Resources>
            </ListBox>
        </StackPanel>
      
            <Border  Grid.Column="1" BorderThickness="2" BorderBrush="#D7E5FA" Height="714">
            <ScrollViewer>
                <StackPanel x:Name="TreeViewContainer">
                    <TreeView x:Name="FolderView" BorderBrush="Transparent">
                        <TreeView.Resources>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image x:Name="TreeViewItemIcon" Width="40" Margin="3" 
                                                   Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Tag, Converter={x:Static local:HeaderToImageConverter.Instance}}"  />
                                                <TextBlock FontFamily="Poppins" FontSize="16" VerticalAlignment="Center" Text="{Binding}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                        </TreeView.Resources>
                    </TreeView>
                </StackPanel>
            </ScrollViewer>
        </Border>
        
        

        <Border Grid.Column="2">
            <StackPanel x:Name="DetailInfoContainer">

            </StackPanel>
        </Border>
    </Grid>
</UserControl>
